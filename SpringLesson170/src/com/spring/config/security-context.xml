<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<security:authentication-manager>

		<!-- authentication based on value in configuration file -->
		<!-- <security:authentication-provider> <security:user-service> <security:user 
			name="Jakez" authorities="ROLE_ADMIN" password="letmein" /> <security:user 
			name="John" authorities="ROLE_ADMIN" password="password" /> </security:user-service> 
			</security:authentication-provider> -->


		<!-- authentication based on database. this id "dataSource" is defined 
			in dao-context.xml -->
		<security:authentication-provider>
			<security:jdbc-user-service
				data-source-ref="dataSource"
				users-by-username-query="select username, password, enabled from users where binary username=?"
				authorities-by-username-query="select username, authority from users where binary username=?"
				id="jdbcUserService" />
			<security:password-encoder ref="passwordEncoder"></security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>


	<!-- Configure static resources to have no Spring Security filters applied 
		to them 
	<security:http pattern="/getmessages" security="none" />
-->

	<!-- if url is just /, let every one see that; if url is /offers, let every 
		one see that; rest all urls will be blocked -->

	<security:http use-expressions="true" auto-config="true">
		<security:intercept-url pattern="/admin"
			access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/createoffer"
			access="isAuthenticated()" />
		<security:intercept-url pattern="/offerdeleted"
			access="isAuthenticated()" />
		<security:intercept-url pattern="/getmessages"
			access="isAuthenticated()" />
		<security:intercept-url pattern="/sendmessage"
			access="isAuthenticated()" />
		<security:intercept-url pattern="/docreate"
			access="isAuthenticated()" />
		<security:intercept-url pattern="/messages"
			access="isAuthenticated()" />
		<security:intercept-url pattern="/offercreated"
			access="isAuthenticated()" />
		<security:intercept-url pattern="/" access="permitAll" />
		<security:intercept-url pattern="/message"
			access="permitAll" />
		<security:intercept-url pattern="/denied"
			access="permitAll" />
		<security:intercept-url pattern="/loggedout"
			access="permitAll" />
		<security:intercept-url pattern="/newaccount"
			access="permitAll" />
		<security:intercept-url pattern="/createaccount"
			access="permitAll" />
		<security:intercept-url pattern="/accountcreated"
			access="permitAll" />
		<security:intercept-url pattern="/static/**"
			access="permitAll" />
		<security:intercept-url pattern="/login"
			access="permitAll" />
		<security:intercept-url pattern="/**" access="denyAll" />
		<security:form-login login-page="/login"
			username-parameter="j_username" password-parameter="j_password"
			authentication-failure-url="/login?error=true" />
		<security:logout logout-success-url="/loggedout" />


		<!-- The below handling is done from ErrorHandler class. This way is not 
			working while admin page is accessed without logging in -->

		<!-- <security:access-denied-handler error-page="/denied" /> -->
		<security:remember-me user-service-ref="jdbcUserService"
			remember-me-cookie="offersAppKey" />
	</security:http>

	<security:global-method-security
		secured-annotations="enabled">
	</security:global-method-security>

	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.password.StandardPasswordEncoder">
	</bean>
</beans>
